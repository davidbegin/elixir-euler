# Problem 2

# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

defmodule Euler.Problem2 do

  def solve do
    # How can I generate a sequence that is under a limit, in a more
    # programatic way
    result = Enum.map(1..33, &Fibo.fib/1)
      |> Enum.filter(fn(x) -> rem(x, 2) == 0 end)
      |> Enum.sum
    IO.inspect result
  end
end

defmodule Fibo do
  def fib(0), do: 0
  def fib(1), do: 1
  def fib(n) do
    fib(n-1) + fib(n-2)
  end
end

Euler.Problem2.solve
